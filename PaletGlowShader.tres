[gd_resource type="VisualShader" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "albedo"

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "albedo2"

[resource]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform sampler2D albedo;
uniform sampler2D albedo2;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(albedo, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;
	EMISSION = n_out2p0;

}

void light() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(albedo2, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	DIFFUSE_LIGHT = n_out2p0;

}
"
graph_offset = Vector2( -433, -17 )
modes/cull = 2
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -260, 60 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 0, 0, 5 )
nodes/light/2/node = SubResource( 2 )
nodes/light/2/position = Vector2( -40, 80 )
nodes/light/connections = PoolIntArray( 2, 0, 0, 0 )
