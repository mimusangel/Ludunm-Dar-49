[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
uniform_name = "CableColor"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "GravityForce"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 180.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 27

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=10]

[resource]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, specular_schlick_ggx;

uniform float GravityForce;
uniform vec4 CableColor : hint_color;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// ScalarOp:6
	float n_in6p1 = 180.00000;
	float n_out6p0 = n_out3p2 * n_in6p1;

// ScalarFunc:7
	float n_out7p0 = radians(n_out6p0);

// ScalarFunc:8
	float n_out8p0 = sin(n_out7p0);

// ScalarUniform:10
	float n_out10p0 = GravityForce;

// VectorCompose:9
	float n_in9p0 = 0.00000;
	float n_in9p2 = 0.00000;
	vec3 n_out9p0 = vec3(n_in9p0, n_out10p0, n_in9p2);

// VectorOp:5
	vec3 n_out5p0 = vec3(n_out8p0) * n_out9p0;

// VectorOp:4
	vec3 n_out4p0 = n_out2p0 + n_out5p0;

// Output:0
	VERTEX = n_out4p0;

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = CableColor.rgb;
	float n_out2p1 = CableColor.a;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -310.75, 103 )
modes/depth_draw = 3
nodes/vertex/0/position = Vector2( 400, 160 )
nodes/vertex/2/node = SubResource( 3 )
nodes/vertex/2/position = Vector2( -1280, 160 )
nodes/vertex/3/node = SubResource( 4 )
nodes/vertex/3/position = Vector2( -1100, 240 )
nodes/vertex/4/node = SubResource( 5 )
nodes/vertex/4/position = Vector2( 100, 140 )
nodes/vertex/5/node = SubResource( 6 )
nodes/vertex/5/position = Vector2( -80, 240 )
nodes/vertex/6/node = SubResource( 7 )
nodes/vertex/6/position = Vector2( -860, 260 )
nodes/vertex/7/node = SubResource( 8 )
nodes/vertex/7/position = Vector2( -680, 280 )
nodes/vertex/8/node = SubResource( 9 )
nodes/vertex/8/position = Vector2( -500, 280 )
nodes/vertex/9/node = SubResource( 10 )
nodes/vertex/9/position = Vector2( -340, 360 )
nodes/vertex/10/node = SubResource( 2 )
nodes/vertex/10/position = Vector2( -600, 380 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 2, 0, 4, 0, 5, 0, 4, 1, 4, 0, 0, 0, 6, 0, 7, 0, 7, 0, 8, 0, 8, 0, 5, 0, 9, 0, 5, 1, 10, 0, 9, 1, 3, 2, 6, 0 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 40, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1 )
